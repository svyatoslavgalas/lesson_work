# A. Пончики
# Дано количество пончиков (целое число);
# Нужно вернуть строку следующего вида:
# 'Количество пончиков: <count>', где <count> это количество,
# переданное в функцию как параметр.
# Однако, если количество 10 и более - нужно использовать слово
# 'много', вместо текущего количества.
# Таким образом, donuts(5) вернет 'Количество пончиков: 5'
# а donuts(23) - 'Количество пончиков: много'
def donuts(count):
    pass


print(donuts(4), u'Количество пончиков: 4')
print(donuts(9), 'Количество пончиков: 9')
print(donuts(10), 'Количество пончиков: много')
print(donuts(99), 'Количество пончиков: много')


# B. Оба конца
# Дана строка s.
# Верните строку, состоящую из первых 2
# и последних 2 символов исходной строки.
# Таким образом, из строки 'spring' получится 'spng'.
# Однако, если длина строки меньше, чем 2 -
# верните просто пустую строчку.
def both_ends(s):
    pass


print(both_ends('spring'), 'spng')
print(both_ends('Hello'), 'Helo')
print(both_ends('a'), '')
print(both_ends('xyz'), 'xyyz')


# C. Кроме первого
# Дана строка s.
# Верните строку, в которой все вхождения ее первого символа
# заменены на '*', за исключением самого этого первого символа.
# Т.е., из 'babble' получится 'ba**le'.
# Предполагается, что длина строки 1 и более.
# Подсказка: s.replace(stra, strb) вернет версию строки,
# в которой все вхождения stra будут заменены на strb.
def fix_start(s):
    pass

print(fix_start('babble'), 'ba**le')
print(fix_start('aardvark'), 'a*rdv*rk')
print(fix_start('google'), 'goo*le')
print(fix_start('donut'), 'donut')
